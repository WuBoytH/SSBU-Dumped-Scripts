unsafe extern "C" fn effect_edgespecialnstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire1_hold"), Hash40::new("havel"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    for _ in 0..5 {
    if macros::is_excute(agent) {
        macros::FOOT_EFFECT(agent, Hash40::new("sys_run_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 0.8, 10, 0, 4, 0, 0, 0, false);
    }
    wait(agent.lua_state_agent, 6.0);
}
frame(agent.lua_state_agent, 31.0);
if macros::is_excute(agent) {
    macros::EFFECT_OFF_KIND(agent, Hash40::new("edge_fire1_hold"), false, true);
    macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold"), Hash40::new("havel"), 0, 0, 0, 0, 0, 0, 1, true);
    macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_flash"), Hash40::new("havel"), 0, 0, 0, 0, 0, 0, 1, true);
}
for _ in 0..6 {
if macros::is_excute(agent) {
    macros::FOOT_EFFECT(agent, Hash40::new("sys_run_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1.2, 10, 0, 4, 0, 0, 0, false);
}
wait(agent.lua_state_agent, 6.0);
}
frame(agent.lua_state_agent, 68.0);
if macros::is_excute(agent) {
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("arml"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("armr"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("head"), 3, 0, 0, 0, 0, 0, 1.2, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("toel"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("toer"), 0, 0, 0, 0, 0, 0, 1, true);
}
for _ in 0..6 {
if macros::is_excute(agent) {
macros::FOOT_EFFECT(agent, Hash40::new("sys_run_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1.4, 10, 0, 4, 0, 0, 0, false);
}
wait(agent.lua_state_agent, 5.0);
}
frame(agent.lua_state_agent, 100.0);
if macros::is_excute(agent) {
EffectModule::req_screen(agent.module_accessor, Hash40::new("edge_fire3_screen1"), false, false, false);
macros::EFFECT_OFF_KIND(agent, Hash40::new("edge_fire2_hold"), false, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire3_hold_flash"), Hash40::new("havel"), 0, 0, 0, 0, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 102.0);
if macros::is_excute(agent) {
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("arml"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("armr"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("head"), 3, 0, 0, 0, 0, 0, 1.2, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("toel"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura"), Hash40::new("toer"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire3_trigger"), Hash40::new("havel"), 0, 0, 0, 0, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 118.0);
if macros::is_excute(agent) {
macros::EFFECT_OFF_KIND(agent, Hash40::new("edge_fire2_hold_aura"), false, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura_end"), Hash40::new("arml"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura_end"), Hash40::new("armr"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura_end"), Hash40::new("head"), 3, 0, 0, 0, 0, 0, 1.2, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura_end"), Hash40::new("toel"), 0, 0, 0, 0, 0, 0, 1, true);
macros::EFFECT_FOLLOW(agent, Hash40::new("edge_fire2_hold_aura_end"), Hash40::new("toer"), 0, 0, 0, 0, 0, 0, 1, true);
}
frame(agent.lua_state_agent, 120.0);
if macros::is_excute(agent) {
macros::LANDING_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), 0, 0, 0, 0, 0, 0, 1.2, 0, 0, 0, 0, 0, 0, false);
}
}

unsafe extern "C" fn sound_edgespecialnstart(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::is_excute(agent) {
        macros::PLAY_STATUS(agent, Hash40::new("se_edge_special_n01"));
    }
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_kirby_copy_edge_01"));
    }
    frame(agent.lua_state_agent, 119.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_kirby_copy_edge_04"));
        macros::PLAY_SE(agent, Hash40::new("se_edge_special_n04_01"));
    }
}

unsafe extern "C" fn expression_edgespecialnstart(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_attackss"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(agent.lua_state_agent, 10.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_attackss"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(agent.lua_state_agent, 10.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_attackss"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(agent.lua_state_agent, 10.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_attackss"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(agent.lua_state_agent, 10.0);
    frame(agent.lua_state_agent, 45.0);
    for _ in 0..5 {
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_attacks"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    wait(agent.lua_state_agent, 8.0);
}
frame(agent.lua_state_agent, 85.0);
for _ in 0..5 {
if macros::is_excute(agent) {
    ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_attackm"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
}
wait(agent.lua_state_agent, 6.0);
}
if macros::is_excute(agent) {
slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 8);
}
}