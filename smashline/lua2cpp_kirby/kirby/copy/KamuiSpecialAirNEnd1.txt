unsafe extern "C" fn effect_kamuispecialairnend1(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 9.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("kamui_bite"), Hash40::new("arml"), 7, 0, 0, 0, 0, -90, 1, true);
    }
    frame(agent.lua_state_agent, 12.0);
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_METAL);
    0x543c60(false, true);
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_GOLD);
    0x543c60(false, true);
    WorkModule::is_flag(agent.module_accessor, *FIGHTER_INSTANCE_WORK_ID_FLAG_SPYCLOAK);
    0x543c60(false, true);
    macros::FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*METAMON);
    0x543c60(false, true);
    macros::FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*LIGHT);
    0x543c60(false, true);
    macros::FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*DARK);
    0x543c60(false, true);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("kamui_ryusensya_wind_end"), Hash40::new("arml"), 0, 0, 0, 0, 0, 0, 0.8, true);
    }
    frame(agent.lua_state_agent, 30.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("kamui_transform_splash_end"), Hash40::new("neck"), 2, 0, 0, 0, 0, 0, 1, true);
    }
}

unsafe extern "C" fn sound_kamuispecialairnend1(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 6.0);
    if macros::is_excute(agent) {
        macros::STOP_SE(agent, Hash40::new("se_kamui_special_n01"));
        macros::STOP_SE(agent, Hash40::new("se_kamui_special_n06"));
        macros::PLAY_SE(agent, Hash40::new("se_kamui_special_n05"));
    }
    frame(agent.lua_state_agent, 10.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_kamui_special_n05b"));
    }
    frame(agent.lua_state_agent, 31.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_kamui_horn_end"));
    }
}

unsafe extern "C" fn expression_kamuispecialairnend1(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
    }
    frame(agent.lua_state_agent, 9.0);
    if macros::is_excute(agent) {
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_M);
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitm"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}