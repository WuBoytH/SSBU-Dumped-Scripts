unsafe extern "C" fn effect_donkeyspecialairnmax(agent: &mut L2CAgentBase) {
    for _ in 0..3 {
    wait(agent.lua_state_agent, 4.0);
    if macros::is_excute(agent) {
        macros::EFFECT(agent, Hash40::new("sys_smash_flash"), Hash40::new("havel"), 0, 0, 0, 0, 0, 0, 1, 5, 5, 5, 0, 0, 0, false);
    }
}
frame(agent.lua_state_agent, 13.0);
if macros::is_excute(agent) {
    macros::FLASH(agent, 1, 1, 0.502, 0.627);
}
frame(agent.lua_state_agent, 14.0);
if macros::is_excute(agent) {
    macros::FLASH_FRM(agent, 5, 1, 1, 0.502, 0);
}
frame(agent.lua_state_agent, 18.0);
if macros::is_excute(agent) {
    macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("donkey_giantpunch"), Hash40::new("donkey_giantpunch"), Hash40::new("top"), 0, 5.5, 13, 17, -10, 0, 0.5, true, *EF_FLIP_YZ);
    macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("donkey_giantpunch_max"), Hash40::new("donkey_giantpunch_max"), Hash40::new("top"), 0, 5.5, 13, 17, -10, 0, 0.5, true, *EF_FLIP_YZ);
}
frame(agent.lua_state_agent, 22.0);
if macros::is_excute(agent) {
    macros::COL_NORMAL(agent);
    macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("donkey_giantpunch_impact"), Hash40::new("donkey_giantpunch_impact"), Hash40::new("top"), 0, 4, 21, 0, 0, 0, 0.6, true, *EF_FLIP_YZ);
    macros::LAST_EFFECT_SET_COLOR(agent, 1, 0.472, 0);
}
}

unsafe extern "C" fn sound_donkeyspecialairnmax(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 10.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_donkey_special_n01"));
        macros::PLAY_SE(agent, Hash40::new("se_common_smashswing_04"));
    }
    frame(agent.lua_state_agent, 13.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_kirby_copy_donkey_01"));
    }
    frame(agent.lua_state_agent, 16.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_donkey_special_n03"));
    }
}

unsafe extern "C" fn expression_donkeyspecialairnmax(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_L, 5);
    }
    frame(agent.lua_state_agent, 17.0);
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 3);
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitl"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 19.0);
    if macros::is_excute(agent) {
        macros::RUMBLE_HIT(agent, Hash40::new("rbkind_attackll"), 0);
        macros::QUAKE(agent, *CAMERA_QUAKE_KIND_M);
    }
}