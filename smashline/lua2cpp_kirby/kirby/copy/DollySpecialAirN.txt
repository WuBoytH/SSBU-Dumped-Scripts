unsafe extern "C" fn effect_dollyspecialairn(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW(agent, Hash40::new("dolly_wave_aura"), Hash40::new("armr"), 0, 0, 0, 0, 0, 0, 1, true);
    }
    frame(agent.lua_state_agent, 16.0);
    if macros::is_excute(agent) {
        macros::EFFECT_FOLLOW_FLIP(agent, Hash40::new("dolly_wave_arc"), Hash40::new("dolly_wave_arc"), Hash40::new("top"), -1, 6, 2, 60, -46, -45, 0.9, true, *EF_FLIP_YZ);
    }
}

unsafe extern "C" fn sound_dollyspecialairn(agent: &mut L2CAgentBase) {
    frame(agent.lua_state_agent, 1.0);
    if macros::IS_GENERATABLE_ARTICLE(agent, *FIGHTER_DOLLY_GENERATE_ARTICLE_WAVE) {
        if macros::is_excute(agent) {
            macros::PLAY_SE(agent, Hash40::new("vc_kirby_copy_dolly_special_n02"));
            macros::PLAY_SE(agent, Hash40::new("se_dolly_special_n01"));
        }
    }
    frame(agent.lua_state_agent, 13.0);
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_dolly_special_n02"));
    }
    else {
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("se_dolly_special_n01"));
    }
}
frame(agent.lua_state_agent, 13.0);
if macros::is_excute(agent) {
    macros::PLAY_SE(agent, Hash40::new("se_dolly_special_n02"));
}
frame(agent.lua_state_agent, 17.0);
if macros::IS_GENERATABLE_ARTICLE(agent, *FIGHTER_DOLLY_GENERATE_ARTICLE_WAVE) {
    if macros::is_excute(agent) {
        macros::PLAY_SE(agent, Hash40::new("vc_kirby_attack02"));
    }
}
}

unsafe extern "C" fn expression_dollyspecialairn(agent: &mut L2CAgentBase) {
    if macros::is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(agent.module_accessor, false, 0);
    }
    frame(agent.lua_state_agent, 2.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_nohitm"), 3, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(agent.lua_state_agent, 19.0);
    if macros::is_excute(agent) {
        ControlModule::set_rumble(agent.module_accessor, Hash40::new("rbkind_loopattack"), 15, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}