unsafe extern "C" fn effect_zeldaspecialairn(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("zelda_nayru_flash"), Hash40::new("havel"), 0, 0, 0, -0.0, 0.0, 0.0, 1, true);
        EffectModule::enable_sync_init_pos_last(boma);
        EFFECT_FOLLOW(agent, Hash40::new("zelda_nayru_flash"), Hash40::new("haver"), 0, 0, 0, 0.0, 0.0, 0.0, 1, true);
        EffectModule::enable_sync_init_pos_last(boma);
    }
    frame(lua_state, 5.0);
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("sys_smash_flash"), Hash40::new("top"), -3.5, 13, -6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
        }
        else {
        if is_excute(agent) {
            EFFECT(agent, Hash40::new("sys_smash_flash"), Hash40::new("top"), 3.5, 13, -6, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, true);
        }
    }
}
frame(lua_state, 8.0);
if get_value_float(agent.lua_state_agent, *SO_VAR_FLOAT_LR) < 0.0 {
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("zelda_nayru_l"), Hash40::new("top"), 0, 6, 0, 0, 0, 0, 1.1, true);
    }
    else {
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("zelda_nayru_r"), Hash40::new("top"), 0, 6, 0, 0, 0, 0, 1.1, true);
    }
}
}
frame(lua_state, 12.0);
for _ in 0..6 {
wait(lua_state, 2.0);
if is_excute(agent) {
COL_NORMAL(agent);
}
wait(lua_state, 2.0);
}
}

unsafe extern "C" fn sound_zeldaspecialairn(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 2.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_zelda_special_n01"));
        PLAY_SE(agent, Hash40::new("vc_kirby_copy_zelda_01"));
    }
}

unsafe extern "C" fn expression_zeldaspecialairn(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 10.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_elecattacks"), 23, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 13.0);
    if is_excute(agent) {
        RUMBLE_HIT(agent, Hash40::new("rbkind_attacks"), 5);
    }
    frame(lua_state, 14.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_L);
    }
    frame(lua_state, 28.0);
    if is_excute(agent) {
        RUMBLE_HIT(agent, Hash40::new("rbkind_attackm"), 0);
    }
    frame(lua_state, 61.0);
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE_INTP, *SLOPE_STATUS_LR, 5);
    }
}