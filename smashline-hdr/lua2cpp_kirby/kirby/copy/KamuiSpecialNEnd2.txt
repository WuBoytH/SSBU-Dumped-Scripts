unsafe extern "C" fn effect_kamuispecialnend2(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 9.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("kamui_bite"), Hash40::new("top"), 0, 10, 14, 90, 0, 0, 1.7, true);
    }
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_METAL);
    0x543c60(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_GOLD);
    0x543c60(false, true);
    WorkModule::is_flag(boma, *FIGHTER_INSTANCE_WORK_ID_FLAG_SPYCLOAK);
    0x543c60(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*METAMON);
    0x543c60(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*LIGHT);
    0x543c60(false, true);
    FT_IS_SAME_FIGHTER_CATEGORY(agent, FighterCategory:*DARK);
    0x543c60(false, true);
    if is_excute(agent) {
        EFFECT_FOLLOW_NO_STOP(agent, Hash40::new("kamui_ryusensya_wind_end"), Hash40::new("arml"), 0, 0, 0, 0, 0, 0, 0.8, false);
    }
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_h_smoke_b"), Hash40::new("top"), -5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, false);
    }
    frame(lua_state, 43.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("kamui_transform_splash_end"), Hash40::new("neck"), 2, 0, 0, 0, 0, 0, 1, true);
    }
}

unsafe extern "C" fn sound_kamuispecialnend2(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 8.0);
    if is_excute(agent) {
        STOP_SE(agent, Hash40::new("se_kamui_special_n06"));
        PLAY_SE(agent, Hash40::new("se_kamui_special_n07"));
    }
    frame(lua_state, 30.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_kamui_horn_end"));
    }
}

unsafe extern "C" fn expression_kamuispecialnend2(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
    }
    frame(lua_state, 9.0);
    if is_excute(agent) {
        QUAKE(agent, *CAMERA_QUAKE_KIND_M);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_impact"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}