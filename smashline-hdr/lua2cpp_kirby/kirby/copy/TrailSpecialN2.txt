unsafe extern "C" fn effect_trailspecialn2(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 0.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("trail_ice_hold"), Hash40::new("haver"), 0, 10, -1, -90, 0, 0, 1, true);
        EFFECT_FOLLOW(agent, Hash40::new("trail_sword_ice"), Hash40::new("haver"), 0, 0, 0, -90, 0, 0, 1, true);
    }
    frame(lua_state, 23.0);
    if is_excute(agent) {
        LANDING_EFFECT(agent, Hash40::new("sys_atk_smoke"), Hash40::new("top"), -1.5, 0, 0, 0, 0, 0, 0.8, 0, 0, 0, 0, 0, 0, false);
    }
    frame(lua_state, 24.0);
    if is_excute(agent) {
        EFFECT_FOLLOW(agent, Hash40::new("trail_ice_shot"), Hash40::new("haver"), 0, 10, -1, -90, 0, 0, 1, true);
    }
    frame(lua_state, 25.0);
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT_FOLLOW(agent, Hash40::new("trail_ice_impact)", Hash40::new("haver"), 0, 10, -1, -90, 0, 0, 1, true);
        }
        else {
        if is_excute(agent) {
            EFFECT_FOLLOW(agent, Hash40::new("trail_ice_impact)", Hash40::new("haver"), 0, 10, -1, -90, 180, 0, 1, true);
        }
    }
}
frame(lua_state, 40.0);
if is_excute(agent) {
    EFFECT_DETACH_KIND(agent, Hash40::new("trail_sword_ice"), -1);
    EFFECT_OFF_KIND(agent, Hash40::new("trail_sword_ice"), false, true);
}
}

unsafe extern "C" fn sound_trailspecialn2(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 1.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_trail_special_n_b01"));
    }
    frame(lua_state, 21.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("vc_kirby_copy_trail_special_n02"));
    }
    frame(lua_state, 23.0);
    if is_excute(agent) {
        PLAY_SE(agent, Hash40::new("se_trail_special_n_b02"));
    }
}

unsafe extern "C" fn expression_trailspecialn2(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        ItemModule::set_have_item_visibility(boma, false, 0);
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
    }
    frame(lua_state, 19.0);
    if is_excute(agent) {
        ControlModule::set_rumble(boma, Hash40::new("rbkind_81_special_n2"), 0, false, *BATTLE_OBJECT_ID_INVALID as u32);
    }
    frame(lua_state, 67.0);
    if ItemModule::is_have_item(boma, 0) {
        if is_excute(agent) {
            FT_MOTION_INTP_WAIT_ITEM(agent, true, 0);
        }
    }
}