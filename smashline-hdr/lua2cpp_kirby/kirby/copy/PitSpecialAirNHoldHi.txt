unsafe extern "C" fn effect_pitspecialairnholdhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        EFFECT_OFF_KIND(agent, Hash40::new("pit_pa_hold_bow"), true, true);
        EFFECT_OFF_KIND(agent, Hash40::new("pit_pa_hold_bow2"), true, true);
    }
    if sv_animcmd::get_value_float(agent, *SO_VAR_FLOAT_LR) < 0.0 {
        if is_excute(agent) {
            EFFECT_FOLLOW(agent, Hash40::new("pit_pa_hold_bow2"), Hash40::new("havel"), 0.5, 2, 0, -8, -30, 180, 0.85, true);
        }
        else {
        if is_excute(agent) {
            EFFECT_FOLLOW(agent, Hash40::new("pit_pa_hold_bow2"), Hash40::new("havel"), -0.5, -2, 0, 8, -30, 0, 0.85, true);
        }
    }
}
}

unsafe extern "C" fn sound_pitspecialairnholdhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    frame(lua_state, 0.0);
    sound!(agent, *MA_MSC_CMD_SOUND_IS_PLAYING_STATUS, Hash40::new("se_pit_special_n01"));
    if(0x543c60(false)){
        if is_excute(agent) {
            PLAY_STATUS(agent, Hash40::new("se_pit_special_n01"));
        }
    }
}

unsafe extern "C" fn expression_pitspecialairnholdhi(agent: &mut L2CAgentBase) {
    let lua_state = agent.lua_state_agent;
    let boma = agent.boma();
    if is_excute(agent) {
        slope!(agent, *MA_MSC_CMD_SLOPE_SLOPE, *SLOPE_STATUS_LR);
        ItemModule::set_have_item_visibility(boma, false, 0);
        ControlModule::set_rumble(boma, Hash40::new("rbkind_drawhold"), 0, true, *BATTLE_OBJECT_ID_INVALID as u32);
    }
}